import streamlit as st
import pandas as pd
from google.oauth2 import service_account
from googleapiclient.discovery import build
from googleapiclient.http import HttpRequest
import google_auth_httplib2
import httplib2

# Constants for Google Sheets API
SCOPE = ["https://www.googleapis.com/auth/spreadsheets"]
SPREADSHEET_ID = "10iVbv4eoBjgxnMOHHN_ZEz1qM_SGccftXel18yhzx4c"
SHEET_NAME = "Sheet1"
GSHEET_URL = f"https://docs.google.com/spreadsheets/d/{SPREADSHEET_ID}"

# Create connection to Google Sheets API
@st.cache_resource
def connect_to_gsheet():
    credentials = service_account.Credentials.from_service_account_info(
        st.secrets["gcp_service_account"], scopes=SCOPE
    )
    
    authorized_http = google_auth_httplib2.AuthorizedHttp(credentials, http=httplib2.Http())
    
    service = build("sheets", "v4", http=authorized_http)
    gsheet_connector = service.spreadsheets()
    return gsheet_connector

# Function to fetch data from the Google Sheet and return as DataFrame
def get_data(gsheet_connector) -> pd.DataFrame:
    values = (
        gsheet_connector.values()
        .get(spreadsheetId=SPREADSHEET_ID, range=f"{SHEET_NAME}!A:AJ")
        .execute()
    )
    df = pd.DataFrame(values["values"])
    df.columns = df.iloc[0]  # Use the first row as the column headers
    df = df[1:]  # Remove the header row
    return df

# Function to append a new row of data to Google Sheet
def add_row_to_gsheet(gsheet_connector, row) -> None:
    gsheet_connector.values().append(
        spreadsheetId=SPREADSHEET_ID,
        range=f"{SHEET_NAME}!A:AJ",
        body=dict(values=row),
        valueInputOption="USER_ENTERED",
    ).execute()

# Google Sheets connection
gsheet_connector = connect_to_gsheet()

#detail
st.header("üë¥üèªüëµüèªThai Geriatric Depression Scale")
st.subheader("‡πÅ‡∏ö‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏™‡∏π‡∏á‡∏≠‡∏≤‡∏¢‡∏∏")
st.divider()

def clear_inputs():
    st.session_state.name = " "
    st.session_state.gender = ''
    st.session_state.age = 0
    st.session_state.address = False

st.header("1.‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß")
name = st.text_input ("‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏•*",key='‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏•')
gender = st.radio("‡πÄ‡∏û‡∏®*",["‡∏ä‡∏≤‡∏¢","‡∏´‡∏ç‡∏¥‡∏á"],key='‡πÄ‡∏û‡∏®')
age = st.number_input("‡∏≠‡∏≤‡∏¢‡∏∏(‡∏õ‡∏µ)*",0,130,key='‡∏≠‡∏≤‡∏¢‡∏∏(‡∏õ‡∏µ)')
address = st.checkbox("‡πÉ‡∏ô‡∏°‡∏´‡∏≤‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏¥‡πå*",key='‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà')

st.markdown("**required*")

if st.button('Clear Inputs'):
    clear_inputs()

st.header("2.‡πÅ‡∏ö‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô")
# create form screening
with st.form('my_form'):
    # Input value screening
    one=st.radio("**1.‡∏ó‡πà‡∏≤‡∏ô‡∏û‡∏≠‡πÉ‡∏à‡∏Å‡∏±‡∏ö‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ**",["‡πÉ‡∏ä‡πà","‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà"])
    two=st.radio("**2.‡∏ó‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏≠‡∏¢‡∏≤‡∏Å‡∏ó‡∏≥‡πÉ‡∏ô‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏Ñ‡∏¢‡∏™‡∏ô‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏Ñ‡∏¢‡∏ó‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏£‡∏∞‡∏à‡∏≥**",["‡πÉ‡∏ä‡πà","‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà"])
    three=st.radio("**3.‡∏ó‡πà‡∏≤‡∏ô‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏Ç‡∏≠‡∏á‡∏ó‡πà‡∏≤‡∏ô‡∏ä‡πà‡∏ß‡∏á‡∏ô‡∏µ‡πâ‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤ ‡πÑ‡∏°‡πà‡∏£‡∏π‡πâ‡∏à‡∏∞‡∏ó‡∏≥‡∏≠‡∏∞‡πÑ‡∏£**",["‡πÉ‡∏ä‡πà","‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà"])
    four=st.radio("**4.‡∏ó‡πà‡∏≤‡∏ô‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡πÄ‡∏ö‡∏∑‡πà‡∏≠‡∏´‡∏ô‡πà‡∏≤‡∏¢‡∏ö‡πà‡∏≠‡∏¢‡πÜ**",["‡πÉ‡∏ä‡πà","‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà"])
    five=st.radio("**5.‡∏ó‡πà‡∏≤‡∏ô‡∏´‡∏ß‡∏±‡∏á‡∏ß‡πà‡∏≤‡∏à‡∏∞‡∏°‡∏µ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏î‡∏µ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô‡πÉ‡∏ô‡∏ß‡∏±‡∏ô‡∏´‡∏ô‡πâ‡∏≤**",["‡πÉ‡∏ä‡πà","‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà"])
    six=st.radio("**6.‡∏ó‡πà‡∏≤‡∏ô‡∏°‡∏µ‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏Å‡∏±‡∏á‡∏ß‡∏•‡∏≠‡∏¢‡∏π‡πà‡∏ï‡∏•‡∏≠‡∏î‡πÄ‡∏ß‡∏•‡∏≤ ‡πÅ‡∏•‡∏∞‡πÄ‡∏•‡∏¥‡∏Å‡∏Ñ‡∏¥‡∏î‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ**",["‡πÉ‡∏ä‡πà","‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà"])
    seven=st.radio("**7.‡∏™‡πà‡∏ß‡∏ô‡πÉ‡∏´‡∏ç‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏ó‡πà‡∏≤‡∏ô‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡∏≠‡∏≤‡∏£‡∏°‡∏ì‡πå‡∏î‡∏µ**",["‡πÉ‡∏ä‡πà","‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà"])
    eight=st.radio("**8.‡∏ó‡πà‡∏≤‡∏ô‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡∏Å‡∏•‡∏±‡∏ß‡∏ß‡πà‡∏≤‡∏à‡∏∞‡∏°‡∏µ‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÑ‡∏°‡πà‡∏î‡∏µ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô‡∏Å‡∏±‡∏ö‡∏ó‡πà‡∏≤‡∏ô**",["‡πÉ‡∏ä‡πà","‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà"])
    nine=st.radio("**9.‡∏™‡πà‡∏ß‡∏ô‡πÉ‡∏´‡∏ç‡πà‡∏ó‡πà‡∏≤‡∏ô‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡∏Ç**",["‡πÉ‡∏ä‡πà","‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà"])
    ten=st.radio("**10.‡∏ö‡πà‡∏≠‡∏¢‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡∏ó‡πà‡∏≤‡∏ô‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ó‡∏µ‡πà‡∏û‡∏∂‡πà‡∏á",["‡πÉ‡∏ä‡πà","‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà"])
    eleven=st.radio("**11.‡∏ó‡πà‡∏≤‡∏ô‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡∏Å‡∏£‡∏∞‡∏ß‡∏ô‡∏Å‡∏£‡∏∞‡∏ß‡∏≤‡∏¢ ‡∏Å‡∏£‡∏∞‡∏™‡∏±‡∏ö‡∏Å‡∏£‡∏∞‡∏™‡πà‡∏≤‡∏¢‡∏ö‡πà‡∏≠‡∏¢‡πÜ**",["‡πÉ‡∏ä‡πà","‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà"])
    twelve=st.radio("**12.‡∏ó‡πà‡∏≤‡∏ô‡∏ä‡∏≠‡∏ö‡∏≠‡∏¢‡∏π‡πà‡∏Å‡∏±‡∏ö‡∏ö‡πâ‡πà‡∏≤‡∏ô‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡∏ô‡∏≠‡∏Å‡∏ö‡πâ‡∏≤‡∏ô**",["‡πÉ‡∏ä‡πà","‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà"])
    thirteen=st.radio("**13.‡∏ö‡πà‡∏≠‡∏¢‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡∏ó‡πà‡∏≤‡∏ô‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡∏ß‡∏¥‡∏ï‡∏Å‡∏Å‡∏±‡∏á‡∏ß‡∏•‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏Ç‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤**",["‡πÉ‡∏ä‡πà","‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà"])
    fourteen=st.radio("**14.‡∏ó‡πà‡∏≤‡∏ô‡∏Ñ‡∏¥‡∏î‡∏ß‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≥‡∏ó‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏î‡∏µ‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ö‡∏Ñ‡∏ô‡∏≠‡∏∑‡πà‡∏ô**",["‡πÉ‡∏ä‡πà","‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà"])
    fifteen=st.radio("**15.‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏ñ‡∏∂‡∏á‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏ô‡∏µ‡πâ ‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ô‡πà‡∏≤‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà**",["‡πÉ‡∏ä‡πà","‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà"])
    sixteen=st.radio("**16.‡∏ó‡πà‡∏≤‡∏ô‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡∏´‡∏°‡∏î‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÉ‡∏à ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏®‡∏£‡πâ‡∏≤‡πÉ‡∏à‡∏ö‡πà‡∏≠‡∏¢‡πÜ**",["‡πÉ‡∏ä‡πà","‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà"])
    seventeen=st.radio("**17.‡∏ó‡πà‡∏≤‡∏ô‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡∏ß‡πà‡∏≤‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏ó‡πà‡∏≤‡∏ô‡∏Ñ‡πà‡∏≠‡∏ô‡∏Ç‡πâ‡∏≤‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡πà‡∏≤**",["‡πÉ‡∏ä‡πà","‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà"])
    eighteen=st.radio("**18.‡∏ó‡πà‡∏≤‡∏ô‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡∏Å‡∏±‡∏á‡∏ß‡∏•‡∏°‡∏≤‡∏Å‡∏Å‡∏±‡∏ö‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏°‡∏≤**",["‡πÉ‡∏ä‡πà","‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà"])
    nineteen=st.radio("**19.‡∏ó‡πà‡∏≤‡∏ô‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡∏ß‡πà‡∏≤‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏ô‡∏µ‡πâ‡∏¢‡∏±‡∏á‡∏°‡∏µ‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ô‡πà‡∏≤‡∏™‡∏ô‡∏∏‡∏Å‡∏≠‡∏µ‡∏Å‡∏°‡∏≤‡∏Å**",["‡πÉ‡∏ä‡πà","‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà"])
    twenty=st.radio("**20.‡∏ó‡πà‡∏≤‡∏ô‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡∏•‡∏≥‡∏ö‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ó‡∏≥‡∏≠‡∏∞‡πÑ‡∏£‡πÉ‡∏´‡∏°‡πà‡πÜ**",["‡πÉ‡∏ä‡πà","‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà"])
    twentyone=st.radio("**21.‡∏ó‡πà‡∏≤‡∏ô‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡∏Å‡∏£‡∏∞‡∏ï‡∏∑‡∏≠‡∏£‡∏∑‡∏≠‡∏£‡πâ‡∏ô**",["‡πÉ‡∏ä‡πà","‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà"])
    twentytwo=st.radio("**22.‡∏ó‡πà‡∏≤‡∏ô‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡∏™‡∏¥‡πâ‡∏ô‡∏´‡∏ß‡∏±‡∏á**",["‡πÉ‡∏ä‡πà","‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà"])
    twentythree=st.radio("**23.‡∏ó‡πà‡∏≤‡∏ô‡∏Ñ‡∏¥‡∏î‡∏ß‡πà‡∏≤‡∏Ñ‡∏ô‡∏≠‡∏∑‡πà‡∏ô‡∏î‡∏µ‡∏Å‡∏ß‡πà‡∏≤‡∏ó‡πà‡∏≤‡∏ô**",["‡πÉ‡∏ä‡πà","‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà"])
    twentyfour=st.radio("**24.‡∏ó‡πà‡∏≤‡∏ô‡∏≠‡∏≤‡∏£‡∏°‡∏ì‡πå‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πà‡∏≤‡∏¢‡∏Å‡∏±‡∏ö‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÄ‡∏•‡πá‡∏Å‡πÜ‡∏ô‡πâ‡∏≠‡∏¢‡πÜ‡∏≠‡∏¢‡∏π‡πà‡πÄ‡∏™‡∏°‡∏≠**",["‡πÉ‡∏ä‡πà","‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà"])
    twentyfive=st.radio("**2‡πà5‡πà.‡∏ó‡πà‡∏≤‡∏ô‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡∏≠‡∏¢‡∏≤‡∏Å‡∏£‡πâ‡∏≠‡∏á‡πÑ‡∏´‡πâ‡∏ö‡πà‡∏≠‡∏¢‡πÜ**",["‡πÉ‡∏ä‡πà","‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà"])
    twentysix=st.radio("**26.‡∏ó‡πà‡∏≤‡∏ô‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏±‡πâ‡∏á‡πÉ‡∏à‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏™‡∏¥‡πà‡∏á‡∏´‡∏ô‡∏∂‡πà‡∏á‡∏™‡∏¥‡πà‡∏á‡πÉ‡∏î‡πÑ‡∏î‡πâ‡πÑ‡∏°‡πà‡∏ô‡∏≤‡∏ô**",["‡πÉ‡∏ä‡πà","‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà"])
    twentyseven=st.radio("**2‡πà7‡πà.‡∏ó‡πà‡∏≤‡∏ô‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡∏™‡∏î‡∏ä‡∏∑‡πà‡∏ô‡πÉ‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡∏ï‡∏∑‡πà‡∏ô‡∏ô‡∏≠‡∏ô‡∏ï‡∏≠‡∏ô‡πÄ‡∏ä‡πâ‡∏≤**",["‡πÉ‡∏ä‡πà","‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà"])
    twentyeight=st.radio("**28.‡∏ó‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏≠‡∏¢‡∏≤‡∏Å‡∏û‡∏ö‡∏õ‡∏∞‡∏û‡∏π‡∏î‡∏Ñ‡∏∏‡∏¢‡∏Å‡∏±‡∏ö‡∏Ñ‡∏ô‡∏≠‡∏∑‡πà‡∏ô**",["‡πÉ‡∏ä‡πà","‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà"])
    twentynine=st.radio("**29.‡∏ó‡πà‡∏≤‡∏ô‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à‡∏≠‡∏∞‡πÑ‡∏£‡πÑ‡∏î‡πâ‡πÄ‡∏£‡πá‡∏ß**",["‡πÉ‡∏ä‡πà","‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà"])
    thirty=st.radio("**30.‡∏ó‡πà‡∏≤‡∏ô‡∏°‡∏µ‡∏à‡∏¥‡∏ï‡πÉ‡∏à‡∏™‡∏ö‡∏≤‡∏¢‡πÅ‡∏à‡πà‡∏°‡πÉ‡∏™‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Å‡πà‡∏≠‡∏ô**",["‡πÉ‡∏ä‡πà","‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà"])

    submitted = st.form_submit_button('Show results')

    
    #Calculate score


        # Define a dictionary to map each variable to its corresponding score
    score_mapping_no = {
            'one': one,
            'five': five,
            'seven': seven,
            'nine': nine,
            'fifteen': fifteen,
            'nineteen': nineteen,
            'twentyone': twentyone,
            'twentyseven': twentyseven,
            'twentynine': twentynine,
            'thirty': thirty,
            }

        # Define a dictionary to map each variable to its corresponding score
    score_mapping_yes = {
            'two': two,
            'three': three,
            'four': four,
            'six': six,
            'eight': eight,
            'ten': ten,
            'eleven': eleven,
            'twelve': twelve,
            'thriteen': thirteen,
            'fourteen': fourteen,
            'sixteen': sixteen,
            'seventeen': seventeen,
            'eighteen': eighteen,
            'twenty': twenty,
            'twentytwo': twentytwo,
            'twentythree': twentythree,
            'twentyfour': twentyfour,
            'twentyfive': twentyfive,
            'twentysix': twentysix,
            'twentyeight': twentyeight,
            }


# Scoring logic
if submitted:
    total_no = sum(1 for value in score_mapping_no.values() if value == '‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà')
    total_yes = sum(1 for value in score_mapping_yes.values() if value == '‡πÉ‡∏ä‡πà')
    total_score = total_no+total_yes


    # Determine the result based on the score
    if total_score <= 12:
        result = "üëµüèªüë¥üèª ‡∏ú‡∏π‡πâ‡∏™‡∏π‡∏á‡∏≠‡∏≤‡∏¢‡∏∏‡∏õ‡∏Å‡∏ï‡∏¥"
    elif total_score <= 18:
        result = "üôÇ ‡∏ú‡∏π‡πâ‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏®‡∏£‡πâ‡∏≤‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢ (Mild depression)"
    elif total_score <= 24:
        result = "üòï ‡∏ú‡∏π‡πâ‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏®‡∏£‡πâ‡∏≤‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á (Moderate depression)"
    else:
        result = "üò≠ ‡∏ú‡∏π‡πâ‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏®‡∏£‡πâ‡∏≤‡∏£‡∏∏‡∏ô‡πÅ‡∏£‡∏á (Severe depression)"
    
    # Add the row to Google Sheet
    add_row_to_gsheet(
        gsheet_connector,
        [[name, gender, age, address, *answers.values(), total_score, result]],
    )
    st.success(f'‚úÖ ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì üëâ {total_score}   ‡πÅ‡∏õ‡∏•‡∏ú‡∏•: {result}')

# Expander to view all records in Google Sheets
expander = st.expander("See all records")
with expander:
    st.write(f"Open original [Google Sheet]({GSHEET_URL})")
    st.dataframe(get_data(gsheet_connector))
